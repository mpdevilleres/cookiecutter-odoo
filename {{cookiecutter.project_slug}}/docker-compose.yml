version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  odoo_filestore: {}

services:
  db:
    build: ./compose/postgres
#    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    environment:
      - POSTGRES_PASSWORD={{ cookiecutter.postgresql_pass }}
      - POSTGRES_USER={{ cookiecutter.postgresql_user }}

  odoo:
    image: hibou/odoo:{{ cookiecutter.odoo_version }}
#    container_name: odoo
    volumes:
      - ./odoo/config:/etc/odoo
      - ./odoo/extra-addons:/mnt/extra-addons
      - odoo_filestore:/var/lib/odoo
    links:
      - db:db
    depends_on:
      - db
    tty: true

  nginx:
    build: ./compose/nginx
#    container_name: nginx
    depends_on:
      - odoo
{% if cookiecutter.use_lets_encrypt == "y" %}
      - certbot
{% endif %}
    environment:
      - MY_DOMAIN_NAME={{ cookiecutter.domain_name }}

    ports:
      - "0.0.0.0:80:80"
{% if cookiecutter.use_lets_encrypt == "y" %}
      - "0.0.0.0:443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt

  certbot:
    image: quay.io/letsencrypt/letsencrypt
    command: bash -c "sleep 6 && certbot certonly -n --standalone -d {{ cookiecutter.domain_name }} --text --agree-tos --email {{ cookiecutter.email }} --server https://acme-v01.api.letsencrypt.org/directory --rsa-key-size 4096 --verbose --keep-until-expiring --standalone-supported-challenges http-01"
    entrypoint: ""
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    ports:
      - "80"
      - "443"
    environment:
      - MY_DOMAIN_NAME={{ cookiecutter.domain_name }}
      - TERM=xterm

{% endif %}
