user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {

	include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    proxy_headers_hash_bucket_size  52;

    gzip  on;

    upstream odoo {
        server odoo:8069 weight=1 fail_timeout=0;
    }

    upstream odoo-im {
        server odoo:8071 weight=1 fail_timeout=0;
    }

	server {
		listen 80;
		server_name ___my.example.com___ www.___my.example.com___;

        # Strict Transport Security
        add_header Strict-Transport-Security max-age=2592000;

		location /.well-known/acme-challenge {
			# Since the certbot container isn't up constantly, need to resolve ip dynamically using docker's dns
			resolver ___NAMESERVER___;
			set $certbot_addr_port certbot:80;
			proxy_pass http://$certbot_addr_port;
			proxy_set_header Host            $host;
			proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
		}

		location / {
			return         301 https://$server_name$request_uri;
		}

	}

	server {
		listen 443;
        charset     utf-8;
		server_name ___my.example.com___ www.___my.example.com___;

		ssl on;
		ssl_certificate /etc/letsencrypt/live/___my.example.com___/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/___my.example.com___/privkey.pem;
		ssl_session_timeout 5m;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
		ssl_prefer_server_ciphers on;

		ssl_session_cache shared:SSL:10m;
		ssl_dhparam /etc/ssl/private/dhparams.pem;

		location /.well-known/acme-challenge {
			resolver ___NAMESERVER___;
			set $certbot_addr_port certbot:443;
			proxy_pass http://$certbot_addr_port;
			proxy_set_header Host            $host;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header X-Forwarded-Proto https;
		}

        # increase proxy buffer to handle some OpenERP web requests
        proxy_buffers 16 64k;
        proxy_buffer_size 128k;

        #general proxy settings
        # force timeouts if the backend dies
        proxy_connect_timeout 1200s;
        proxy_send_timeout 1200s;
        proxy_read_timeout 1200s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

        # set headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;

        # Let the OpenERP web service know that weâ€™re using HTTPS, otherwise
        # it will generate URL using http:// and not https://
        proxy_set_header X-Forwarded-Proto https;

        # This header is checked by Odoo (together with proxy_mode) to determin
        # server is proxied
        proxy_set_header X-Forwarded-Host $http_host;

        # by default, do not forward anything
        proxy_redirect off;
        proxy_buffering off;

        location /longpolling {
               proxy_pass http://odoo-im;
        }

        # cache some static data in memory for 60mins.
        # under heavy load this should relieve stress on the OpenERP web interface a bit.
        location /web/static/ {
                proxy_cache_valid 200 60m;
                proxy_buffering on;
                expires 864000;
                proxy_pass http://odoo;
        }

        location / {
                proxy_pass http://odoo;
        }

	}

}
